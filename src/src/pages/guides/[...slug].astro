---
import { getPublishedGuides } from '../../utils/helper';
import Layout from '../../layouts/BaseLayout.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import BreadCrumbs from '../../components/BreadCrumbs.astro';

export async function getStaticPaths() {
	const guides = await getPublishedGuides();
	return guides.map((guide) => ({
		params: { slug: guide.slug },
		props: guide,
	}));
}

const guide = Astro.props;
const { title, description, publishedDate, updatedDate } = guide.data;

const { Content } = await guide.render();
---

<Layout title={title} description={description}>
	<style>
		main {
			width: calc(100% - 2em);
			max-width: 100%;
			margin: 0;
		}
		.hero-image {
			width: 100%;
		}
		.hero-image img {
			display: block;
			margin: 0 auto;
			border-radius: 12px;
			box-shadow: var(--box-shadow);
		}
		.prose {
			width: 720px;
			max-width: calc(100% - 2em);
			margin: auto;
			padding: 1em;
			color: rgb(var(--gray-dark));
		}
		.title {
			margin-bottom: 1em;
			padding: 1em 0;
			line-height: 1;
		}
		.title h1 {
			margin: 0 0 0.5em 0;
		}
		.date {
			margin-bottom: 0.5em;
			color: rgb(var(--gray));
		}
		.last-updated-on {
			font-style: italic;
		}
	</style>
	<article>
		<div class="prose">
			
			<BreadCrumbs></BreadCrumbs>
			<div class="title">
				
				<h1>{title}</h1>

				<div class="date">
					<FormattedDate date={publishedDate} />
					{
						updatedDate && (
							<div class="last-updated-on">
								Last updated on <FormattedDate date={updatedDate} />
							</div>
						)
					}
				</div>


				<hr />
			</div>
			<Content />
		</div>
	</article>
</Layout>
